{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0x006fe4a199b8d67dc684900baab74008ef1e361b5374bc41fcebaf5394d146fe",
    "language": "ink! 3.0.0-rc2",
    "compiler": "rustc 1.51.0-nightly"
  },
  "contract": {
    "name": "erc20",
    "version": "0.1.0",
    "authors": ["[your_name] <[your_email]>"]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "initial_supply",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          },
          {
            "name": "name",
            "type": {
              "displayName": ["String"],
              "type": 1
            }
          },
          {
            "name": "symbol",
            "type": {
              "displayName": ["String"],
              "type": 1
            }
          },
          {
            "name": "decimals",
            "type": {
              "displayName": ["u128"],
              "type": 2
            }
          }
        ],
        "docs": [" Creates a new ERC-20 contract with the specified initial supply."],
        "name": ["Erc20", "new"],
        "selector": "0x9bcb5e67"
      }
    ],
    "docs": [],
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "from",
            "type": {
              "displayName": ["Option"],
              "type": 18
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "to",
            "type": {
              "displayName": ["Option"],
              "type": 18
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [" Event emitted when a token transfer occurs."],
        "name": "Transfer"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "owner",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "spender",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [
          " Event emitted when an approval occurs that `spender` is allowed to withdraw",
          " up to the amount of `value` tokens from `owner`."
        ],
        "name": "Approval"
      },
      {
        "args": [],
        "docs": [],
        "name": "Pause"
      },
      {
        "args": [],
        "docs": [],
        "name": "Unpause"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "blacklisted_user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "balance",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [],
        "name": "DestroyedBlackFunds"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [],
        "name": "AddedBlackList"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [],
        "name": "RemovedBlackList"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "amount",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [],
        "name": "Issue"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "amount",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [],
        "name": "Redeem"
      }
    ],
    "messages": [
      {
        "args": [],
        "docs": [" Returns the total token supply."],
        "mutates": false,
        "name": ["Erc20", "total_supply"],
        "payable": false,
        "returnType": {
          "displayName": ["Balance"],
          "type": 2
        },
        "selector": "0x13c0203d"
      },
      {
        "args": [],
        "docs": [" Returns the token name."],
        "mutates": false,
        "name": ["Erc20", "token_name"],
        "payable": false,
        "returnType": {
          "displayName": ["String"],
          "type": 1
        },
        "selector": "0x8a9dd690"
      },
      {
        "args": [],
        "docs": [" Returns the token symbol."],
        "mutates": false,
        "name": ["Erc20", "token_symbol"],
        "payable": false,
        "returnType": {
          "displayName": ["String"],
          "type": 1
        },
        "selector": "0xc7edada3"
      },
      {
        "args": [],
        "docs": [" Returns the token decimals."],
        "mutates": false,
        "name": ["Erc20", "token_decimals"],
        "payable": false,
        "returnType": {
          "displayName": ["u128"],
          "type": 2
        },
        "selector": "0xa2d7f5dc"
      },
      {
        "args": [
          {
            "name": "owner",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [
          " Returns the account balance for the specified `owner`.",
          "",
          " Returns `0` if the account is non-existent."
        ],
        "mutates": false,
        "name": ["Erc20", "balance_of"],
        "payable": false,
        "returnType": {
          "displayName": ["Balance"],
          "type": 2
        },
        "selector": "0x048c15be"
      },
      {
        "args": [
          {
            "name": "to",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [
          " Transfers `value` amount of tokens from the caller's account to account `to`.",
          "",
          " On success a `Transfer` event is emitted.",
          "",
          " # Errors",
          "",
          " Returns `InsufficientBalance` error if there are not enough tokens on",
          " the caller's account balance."
        ],
        "mutates": true,
        "name": ["Erc20", "transfer"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x43fb75e6"
      },
      {
        "args": [
          {
            "name": "owner",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "name": "spender",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [
          " Returns the amount which `spender` is still allowed to withdraw from `owner`.",
          "",
          " Returns `0` if no allowance has been set `0`."
        ],
        "mutates": false,
        "name": ["Erc20", "allowance"],
        "payable": false,
        "returnType": {
          "displayName": ["Balance"],
          "type": 2
        },
        "selector": "0x261bc6de"
      },
      {
        "args": [
          {
            "name": "from",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "name": "to",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [
          " Transfers `value` tokens on the behalf of `from` to the account `to`.",
          "",
          " This can be used to allow a contract to transfer tokens on ones behalf and/or",
          " to charge fees in sub-currencies, for example.",
          "",
          " On success a `Transfer` event is emitted.",
          "",
          " # Errors",
          "",
          " Returns `InsufficientAllowance` error if there are not enough tokens allowed",
          " for the caller to withdraw from `from`.",
          "",
          " Returns `InsufficientBalance` error if there are not enough tokens on",
          " the the account balance of `from`."
        ],
        "mutates": true,
        "name": ["Erc20", "transfer_from"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x52b324a9"
      },
      {
        "args": [
          {
            "name": "spender",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [
          " Allows `spender` to withdraw from the caller's account multiple times, up to",
          " the `value` amount.",
          "",
          " If this function is called again it overwrites the current allowance with `value`.",
          "",
          " An `Approval` event is emitted."
        ],
        "mutates": true,
        "name": ["Erc20", "approve"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0xd7283f27"
      },
      {
        "args": [],
        "docs": [" Contract owner."],
        "mutates": false,
        "name": ["Ownable", "owner"],
        "payable": false,
        "returnType": {
          "displayName": ["AccountId"],
          "type": 6
        },
        "selector": "0x28b03596"
      },
      {
        "args": [
          {
            "name": "new_owner",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [" transfer contract ownership to new owner."],
        "mutates": true,
        "name": ["Ownable", "transfer_ownership"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x09a75962"
      },
      {
        "args": [],
        "docs": [" Pause contract transaction."],
        "mutates": true,
        "name": ["Pausable", "pause"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x8e2a1036"
      },
      {
        "args": [],
        "docs": [" Recover paused contract."],
        "mutates": true,
        "name": ["Pausable", "unpause"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x5ebed919"
      },
      {
        "args": [],
        "docs": [" Return contract pause statue."],
        "mutates": false,
        "name": ["Pausable", "pause_state"],
        "payable": false,
        "returnType": {
          "displayName": ["bool"],
          "type": 13
        },
        "selector": "0x1b11701b"
      },
      {
        "args": [
          {
            "name": "maker",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [" Whether the user is blacklisted."],
        "mutates": false,
        "name": ["BlackList", "get_blacklist_status"],
        "payable": false,
        "returnType": {
          "displayName": ["bool"],
          "type": 13
        },
        "selector": "0xe7be3dc3"
      },
      {
        "args": [
          {
            "name": "evil_user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [" Add illegal user to blacklist."],
        "mutates": true,
        "name": ["BlackList", "add_blacklist"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x2995ca67"
      },
      {
        "args": [
          {
            "name": "cleared_user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [" Remove the user from blacklist."],
        "mutates": true,
        "name": ["BlackList", "remove_blacklist"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0xd4537fea"
      },
      {
        "args": [
          {
            "name": "blacklisted_user",
            "type": {
              "displayName": ["AccountId"],
              "type": 6
            }
          }
        ],
        "docs": [" Destroy blacklisted user funds from total supply."],
        "mutates": true,
        "name": ["BlackList", "destroy_blackfunds"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x0d2102fe"
      },
      {
        "args": [
          {
            "name": "amount",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [" Issue a new amount of tokens", " these tokens are deposited into the owner address"],
        "mutates": true,
        "name": ["issue"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0xe397ed39"
      },
      {
        "args": [
          {
            "name": "amount",
            "type": {
              "displayName": ["Balance"],
              "type": 2
            }
          }
        ],
        "docs": [
          " Redeem tokens.",
          " These tokens are withdrawn from the owner address",
          " if the balance must be enough to cover the redeem",
          " or the call will fail."
        ],
        "mutates": true,
        "name": ["redeem"],
        "payable": false,
        "returnType": {
          "displayName": ["Result"],
          "type": 15
        },
        "selector": "0x892f8571"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "name"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "symbol"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
              "ty": 2
            }
          },
          "name": "decimals"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
              "ty": 2
            }
          },
          "name": "total_supply"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                              "ty": 3
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                                      "ty": 4
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0500000001000000000000000000000000000000000000000000000000000000",
                                          "ty": 5
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0600000000000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0600000001000000000000000000000000000000000000000000000000000000",
                          "ty": 10
                        }
                      },
                      "offset": "0x0500000001000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "balances"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0600000001000000000000000000000000000000000000000000000000000000",
                              "ty": 3
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0700000001000000000000000000000000000000000000000000000000000000",
                                      "ty": 4
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0700000002000000000000000000000000000000000000000000000000000000",
                                          "ty": 11
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0800000001000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0800000002000000000000000000000000000000000000000000000000000000",
                          "ty": 10
                        }
                      },
                      "offset": "0x0700000002000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "allowances"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0800000002000000000000000000000000000000000000000000000000000000",
              "ty": 13
            }
          },
          "name": "pause"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0900000002000000000000000000000000000000000000000000000000000000",
              "ty": 6
            }
          },
          "name": "owner"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0a00000002000000000000000000000000000000000000000000000000000000",
                              "ty": 3
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0b00000002000000000000000000000000000000000000000000000000000000",
                                      "ty": 4
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0b00000003000000000000000000000000000000000000000000000000000000",
                                          "ty": 5
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0c00000002000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0c00000003000000000000000000000000000000000000000000000000000000",
                          "ty": 14
                        }
                      },
                      "offset": "0x0b00000003000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "blacklisted"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 4
            },
            {
              "name": "len",
              "type": 4
            },
            {
              "name": "len_entries",
              "type": 4
            }
          ]
        }
      },
      "path": ["ink_storage", "collections", "stash", "Header"]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 9
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 6
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [6],
      "path": ["ink_storage", "collections", "stash", "Entry"]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 7
            }
          ]
        }
      },
      "path": ["ink_env", "types", "AccountId"]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 8
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 4
            },
            {
              "name": "prev",
              "type": 4
            }
          ]
        }
      },
      "path": ["ink_storage", "collections", "stash", "VacantEntry"]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 2
            },
            {
              "name": "key_index",
              "type": 4
            }
          ]
        }
      },
      "params": [2],
      "path": ["ink_storage", "collections", "hashmap", "ValueEntry"]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 9
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 12
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [12],
      "path": ["ink_storage", "collections", "stash", "Entry"]
    },
    {
      "def": {
        "tuple": [6, 6]
      }
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 13
            },
            {
              "name": "key_index",
              "type": 4
            }
          ]
        }
      },
      "params": [13],
      "path": ["ink_storage", "collections", "hashmap", "ValueEntry"]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 16
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 17
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [16, 17],
      "path": ["Result"]
    },
    {
      "def": {
        "tuple": []
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "InsufficientBalance"
            },
            {
              "discriminant": 1,
              "name": "InsufficientSupply"
            },
            {
              "discriminant": 2,
              "name": "InsufficientAllowance"
            },
            {
              "discriminant": 3,
              "name": "BlacklistedUser"
            },
            {
              "discriminant": 4,
              "name": "InvalidAmount"
            },
            {
              "discriminant": 5,
              "name": "OnlyOwnerAccess"
            },
            {
              "discriminant": 6,
              "name": "InvalidNewOwner"
            },
            {
              "discriminant": 7,
              "name": "NotBlacklistedUser"
            }
          ]
        }
      },
      "path": ["erc20", "erc20", "Error"]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 6
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [6],
      "path": ["Option"]
    }
  ]
}
